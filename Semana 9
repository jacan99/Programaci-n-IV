import requests


BASE_URL = 'https://swapi.dev/api/'


def get_data(endpoint):
    response = requests.get(BASE_URL + endpoint)
    response.raise_for_status()
    return response.json()


def get_planets_with_arid_climate():
    planets = get_data('planets/')['results']
    arid_planets = [p for p in planets if 'arid' in p['climate'].lower()]
    arid_planet_films = set()

    for planet in arid_planets:
        for film_url in planet['films']:
            film = get_data(film_url.split(BASE_URL)[1])
            arid_planet_films.add(film['title'])

    return len(arid_planet_films)


def get_number_of_wookiees():
    species = get_data('species/')['results']
    wookie_species_url = None

    for s in species:
        if s['name'] == 'Wookiee':
            wookie_species_url = s['url']
            break

    if not wookie_species_url:
        return 0

    wookiee_characters = set()
    people = get_data('people/')['results']

    for person in people:
        if wookie_species_url in person['species']:
            wookiee_characters.add(person['name'])

    return len(wookiee_characters)


def get_smallest_starship_in_first_film():
    starships = get_data('starships/')['results']
    first_film_url = 'https://swapi.dev/api/films/1/' 
    smallest_starship = None
    smallest_length = float('inf')

    for starship in starships:
        if first_film_url in starship['films']:
            length = float(starship['length'])
            if length < smallest_length:
                smallest_length = length
                smallest_starship = starship['name']

    return smallest_starship


if __name__ == "__main__":
    arid_planet_films_count = get_planets_with_arid_climate()
    print(f"a) Number of films with planets having arid climate: {arid_planet_films_count}")

    wookiee_count = get_number_of_wookiees()
    print(f"b) Number of Wookiees appearing in the saga: {wookiee_count}")

    smallest_starship = get_smallest_starship_in_first_film()
    print(f"c) Name of the smallest starship in the first film: {smallest_starship}")
